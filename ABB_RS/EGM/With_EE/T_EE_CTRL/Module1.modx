MODULE Module1
    ! ## =========================================================================== ## 
    ! MIT License
    ! Copyright (c) 2023 Roman Parak
    ! Permission is hereby granted, free of charge, to any person obtaining a copy
    ! of this software and associated documentation files (the "Software"), to deal
    ! in the Software without restriction, including without limitation the rights
    ! to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    ! copies of the Software, and to permit persons to whom the Software is
    ! furnished to do so, subject to the following conditions:
    ! The above copyright notice and this permission notice shall be included in all
    ! copies or substantial portions of the Software.
    ! THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    ! IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    ! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    ! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    ! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    ! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    ! SOFTWARE.
    ! ## =========================================================================== ## 
    ! Author   : Roman Parak
    ! Email    : Roman.Parak@outlook.com
    ! Github   : https://github.com/rparak
    ! File Name: T_ROB1/T_EE_CTRL.mod
    ! ## =========================================================================== ## 
    
    ! End-effector:
    !   Digital output data: [ID, Open, Close]
    PERS num DO_DATA_EE_CTRL{3};
    !   Digital input data: [ID, Is_Open, Is_Closed]
    PERS num DI_DATA_EE_STREAM{3};
    
    ! Actual State {Main State-Machine)
    VAR num actual_state := 0;
    
    PROC main()
        TEST actual_state
            CASE 0:
                ! Description:                              !
                !  Initialization state to reset variables. !
                
                ! Reset Controller Signals
                SetDO ABB_Local_IO_0_DO1, 0;
                SetDO ABB_Local_IO_0_DO2, 0; 
                
                ! Reset RAPID Variables
                DO_DATA_EE_CTRL := [0.0, 0.0, 0.0];
                DI_DATA_EE_STREAM := [0.0, 0.0, 0.0];
                
                actual_state := 1;
                
            CASE 1:
                ! Description:                                           !
                !  The waiting state for confirmation of the connection. !  
            
                ! ID to confirm successful communication
                DI_DATA_EE_STREAM{1} := DO_DATA_EE_CTRL{1};
                
                IF DI_DATA_EE_STREAM{1} = 1 THEN
                    actual_state := 2;
                ENDIF
                   
            CASE 2:
                ! Description:                                        !
                !  The main control state for the robot end-effector. !
                
                ! End-Effector status information:
                !   Status: Open
                DI_DATA_EE_STREAM{2} := ABB_Local_IO_0_DI1;
                !   Status: Closed
                DI_DATA_EE_STREAM{3} := ABB_Local_IO_0_DO2;
                
                IF DO_DATA_EE_CTRL{1} = 1 THEN
                    ! End-Effector: 
                    !   Command: Open
                    IF DO_DATA_EE_CTRL{2} = 1 AND ABB_Local_IO_0_DI1 = 0 THEN
                        SetDO ABB_Local_IO_0_DO2, DO_DATA_EE_CTRL{3};
                        SetDO ABB_Local_IO_0_DO1, DO_DATA_EE_CTRL{2};
                    ENDIF
                    
                    ! End-Effector: 
                    !   Command: Close
                    IF DO_DATA_EE_CTRL{3} = 1 AND ABB_Local_IO_0_DI2 = 0 THEN
                        SetDO ABB_Local_IO_0_DO1, DO_DATA_EE_CTRL{2};
                        SetDO ABB_Local_IO_0_DO2, DO_DATA_EE_CTRL{3};
                    ENDIF
                ELSE
                    SetDO ABB_Local_IO_0_DO1, 0;
                    SetDO ABB_Local_IO_0_DO2, 0;  
                ENDIF
        ENDTEST
        
        ! Wait 0.1 seconds. Just change the value if necessary.
        WaitTime 0.1;
    ENDPROC
    
ENDMODULE