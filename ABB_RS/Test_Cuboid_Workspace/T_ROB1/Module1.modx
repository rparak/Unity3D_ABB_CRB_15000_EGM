MODULE Module1
    ! ## =========================================================================== ## 
    ! MIT License
    ! Copyright (c) 2023 Roman Parak
    ! Permission is hereby granted, free of charge, to any person obtaining a copy
    ! of this software and associated documentation files (the "Software"), to deal
    ! in the Software without restriction, including without limitation the rights
    ! to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    ! copies of the Software, and to permit persons to whom the Software is
    ! furnished to do so, subject to the following conditions:
    ! The above copyright notice and this permission notice shall be included in all
    ! copies or substantial portions of the Software.
    ! THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    ! IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    ! FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    ! AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    ! LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    ! OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    ! SOFTWARE.
    ! ## =========================================================================== ## 
    ! Author   : Roman Parak
    ! Email    : Roman.Parak@outlook.com
    ! Github   : https://github.com/rparak
    ! File Name: T_ROB1/Module1.mod
    ! ## =========================================================================== ## 
    
    ! Description:        !
    !   Cuboid Parameters !
    ! Center Position
    LOCAL CONST num CENTER_POSITION{3} := [500.0,0.0,400.0];
    ! Size
    LOCAL CONST num CUBOID_SIZE{3} := [400.0, 400.0, 400.0];
    ! Vertices
    LOCAL CONST num C00{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2) + CUBOID_SIZE{1},(CENTER_POSITION{2} - CUBOID_SIZE{2}/2)                 ,(CENTER_POSITION{3} - CUBOID_SIZE{3}/2)];
    LOCAL CONST num C01{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2) + CUBOID_SIZE{1},(CENTER_POSITION{2} - CUBOID_SIZE{2}/2) + CUBOID_SIZE{2},(CENTER_POSITION{3} - CUBOID_SIZE{3}/2)];
    LOCAL CONST num C02{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2)                 ,(CENTER_POSITION{2} - CUBOID_SIZE{2}/2) + CUBOID_SIZE{2},(CENTER_POSITION{3} - CUBOID_SIZE{3}/2)];
    LOCAL CONST num C03{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2)                 ,(CENTER_POSITION{2} - CUBOID_SIZE{2}/2)                 ,(CENTER_POSITION{3} - CUBOID_SIZE{3}/2)];
    LOCAL CONST num C10{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2) + CUBOID_SIZE{1},(CENTER_POSITION{2} - CUBOID_SIZE{2}/2)                 ,(CENTER_POSITION{3} - CUBOID_SIZE{3}/2) + CUBOID_SIZE{3}];
    LOCAL CONST num C11{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2) + CUBOID_SIZE{1},(CENTER_POSITION{2} - CUBOID_SIZE{2}/2) + CUBOID_SIZE{2},(CENTER_POSITION{3} - CUBOID_SIZE{3}/2) + CUBOID_SIZE{3}];
    LOCAL CONST num C12{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2)                 ,(CENTER_POSITION{2} - CUBOID_SIZE{2}/2) + CUBOID_SIZE{2},(CENTER_POSITION{3} - CUBOID_SIZE{3}/2) + CUBOID_SIZE{3}];
    LOCAL CONST num C13{3} := [(CENTER_POSITION{1} - CUBOID_SIZE{1}/2)                 ,(CENTER_POSITION{2} - CUBOID_SIZE{2}/2)                 ,(CENTER_POSITION{3} - CUBOID_SIZE{3}/2) + CUBOID_SIZE{3}];
    LOCAL CONST num CUBOID_VERTICES{8,3} := [[C00{1}, C00{2}, C00{3}], 
                                             [C01{1}, C01{2}, C01{3}],
                                             [C02{1}, C02{2}, C02{3}],
                                             [C03{1}, C03{2}, C03{3}],
                                             [C10{1}, C10{2}, C10{3}],
                                             [C11{1}, C11{2}, C11{3}],
                                             [C12{1}, C12{2}, C12{3}],
                                             [C13{1}, C13{2}, C13{3}]];
                                       
    ! Initialization Position (Auxiliary Target)
    VAR robtarget Target_Auxiliary:=[[CENTER_POSITION{1}, CENTER_POSITION{2}, CENTER_POSITION{3}],[0.0,0,1,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    PROC main()
        ! Adjust the right end-effector of the robot arm.
        !   1\ Without EE: tool0
        !       Example: MoveL Target_Auxiliary,v100,fine,CONST_EE_TOOL_EGP_C_40\WObj:=wobj0;
        !   2\ Schunk EE: CONST_EE_TOOL_EGP_C_40
        !       Example: MoveL Target_Auxiliary,v100,fine,CONST_EE_TOOL_EGP_C_40\WObj:=wobj0;

        ! Move to the starting position
        MoveL Target_Auxiliary,v100,fine,CONST_EE_TOOL_EGP_C_40\WObj:=wobj0;
        
        ! Call Procedure -> Testing the workspace of the robot from the created cube
        !Test_Cuboid_Workspace;
    ENDPROC
    
    PROC Test_Cuboid_Workspace()
        ! Move to the starting position
        MoveL Target_Auxiliary,v100,fine,tool0\WObj:=wobj0;
        FOR i FROM 1 TO 8 DO
            ! Testing the workspace of the robot from the created cube
            MoveL Offs(Target_Auxiliary,
                       CUBOID_VERTICES{i, 1} - CENTER_POSITION{1}, 
                       CUBOID_VERTICES{i, 2} - CENTER_POSITION{2},
                       CUBOID_VERTICES{i, 3} - CENTER_POSITION{3}), 
                       v500,fine,CONST_EE_TOOL_EGP_C_40\WObj:=wobj0;
        ENDFOR
    ENDPROC
ENDMODULE